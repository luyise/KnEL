open test0
open test3
open num.test_num
open <-tests2.test4

Tactic fast_tac (id : ident) =
   Intro id > Apply id
End

Theorem my_first_Theorem:
    ¬¬¬A → ¬A
Proof
    Intro NNN_a;
    Intro a;
    Apply NNN_a;
    fast_tac n_a;
    Exact a;
QED

Theorem:
    A × (A → B) → B
Proof
    Intro p;
Ongoing

Theorem:
    ∀ x: int, ∃ y: int, y + x = y + x
Proof
Ongoing

// Basic Tactics :
//
// Intro (name : ident)
// Apply (f_term : term)
// Split
// ProdRec [name1 : ident, name2 : ident, ..., namen : ident]
// Choose (n : int)
// SumRec
// Exact (t : term)
//
// Combined Tactics :
