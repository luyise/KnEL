open test0
open test3
open num.test_num
open <-tests2.test4

Definition id (x y: Type) : Type := x
End

Theorem my_first_Theorem:
    ¬¬¬A → ¬A
Proof
    Intro NNN_a;
    Intro a;
    Apply [NNN_a];
    Intro n_a;
    Apply [n_a];
    Exact [a];
QED

Theorem:
    A × (A → B) → B
Proof
    Intro p;
Admitted

Theorem:
    ∀ x: int, ∃ y: int, (y + x = y + x, x, y)
Proof
Ongoing

// Basic Tactics :
//
// Intro (name : ident)
// Apply (f_term : term)
// Split
// ProdRec [name1 : ident, name2 : ident, ..., namen : ident]
// Choose (n : int)
// SumRec
// Exact (t : term)
//
// Combined Tactics :
